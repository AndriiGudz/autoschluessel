---
// Импорты
import 'swiper/css';
import 'swiper/css/effect-coverflow';
import 'swiper/css/pagination';
import 'swiper/css/navigation';

interface VideoItem { 
  src: string;
  poster?: string;
  alt?: string;
}

interface Props {
  videos: VideoItem[];
  title?: string;
}

const { videos, title = "Wie funktioniert das?" } = Astro.props;
---

<div class="carousel-container">
  <div class="section-title">
    <h2>{title}</h2>
  </div>
  <div class="swiper">
    <div class="swiper-wrapper">
      {videos.map((video, index) => (
        <div class="swiper-slide">
          <div class="slide-content">
            <div class="video-container">
              <video 
                src={video.src} 
                poster={video.poster}
                preload="metadata"
                id={`video-${index}`}
                playsinline
                onloadedmetadata="this.dataset.loaded='true'"
                onerror="this.dataset.error='true'"
              ></video>
              <button 
                class="play-button" 
                data-video-id={`video-${index}`}
                aria-label="Play video"
              >
                <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="24" cy="24" r="24" fill="rgba(0,0,0,0.5)"/>
                  <path d="M32 24L20 32V16L32 24Z" fill="white"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
    
    <div class="swiper-pagination"></div>
  </div>
</div>

<script>
  import Swiper from 'swiper';
  import { EffectCoverflow, Navigation, Pagination } from 'swiper/modules';

  const swiper = new Swiper('.swiper', {
    modules: [EffectCoverflow, Navigation, Pagination],
    effect: 'coverflow',
    grabCursor: true,
    centeredSlides: true,
    slidesPerView: 3,
    initialSlide: 1,
    loop: true,
    spaceBetween: 20,
    slideVisibleClass: 'swiper-slide-visible',
    coverflowEffect: {
      rotate: 5,
      stretch: 0,
      depth: 200,
      modifier: 1.5,
      slideShadows: true,
    },
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    breakpoints: {
      320: {
        slidesPerView: 1.5,
        spaceBetween: 10,
        coverflowEffect: {
          rotate: 0,
          depth: 100,
          modifier: 1
        }
      },
      768: {
        slidesPerView: 3,
        spaceBetween: 8
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 20
      }
    },
    on: {
      slideChange: function() {
        // При смене слайда останавливаем все видео
        document.querySelectorAll('video').forEach(video => {
          if (!video.paused) {
            video.pause();
            const btn = document.querySelector(`[data-video-id="${video.id}"]`) as HTMLButtonElement | null;
            if (btn) {
              btn.classList.remove('playing');
              btn.style.opacity = '1';
            }
          }
        });
      }
    }
  });

  // Обработчики кнопок воспроизведения
  document.querySelectorAll('.play-button').forEach(button => {
    if (!(button instanceof HTMLButtonElement)) return;
    
    button.addEventListener('click', () => {
      const videoId = button.getAttribute('data-video-id');
      if (!videoId) return;

      const video = document.getElementById(videoId);
      if (!(video instanceof HTMLVideoElement)) return;

      if (video.dataset.error === 'true') {
        console.error('Video failed to load');
        return;
      }

      if (!video.dataset.loaded) {
        console.warn('Video not loaded yet');
        return;
      }

      if (video.paused) {
        // Останавливаем все другие видео
        document.querySelectorAll('video').forEach(v => {
          if (v.id !== videoId && !v.paused) {
            v.pause();
            const btn = document.querySelector(`[data-video-id="${v.id}"]`) as HTMLButtonElement | null;
            if (btn) {
              btn.classList.remove('playing');
              btn.style.opacity = '1';
            }
          }
        });

        video.play()
          .then(() => {
            button.classList.add('playing');
            button.style.opacity = '0';
          })
          .catch(error => {
            console.error('Failed to play video:', error);
          });

        // Добавляем обработчики событий для видео
        const handlePause = () => {
          button.classList.remove('playing');
          button.style.opacity = '1';
        };

        video.addEventListener('pause', handlePause);
        video.addEventListener('ended', handlePause);

      } else {
        video.pause();
      }
    });
  });

  // Добавляем обработчик клика по видео для паузы
  document.querySelectorAll('video').forEach(video => {
    if (!(video instanceof HTMLVideoElement)) return;
    
    video.addEventListener('click', () => {
      if (!video.paused) {
        video.pause();
      }
    });
  });
</script>

<style>
  .carousel-container {
    width: 100%;
    padding: 8px 0;
    overflow: hidden;
  }

  .section-title {
    position: relative;
    padding: 8px 16px;
  }

  .section-title::after {
    content: "";
    position: absolute;
    bottom: 0px;
    left: 66px;
    transform: translateX(-50%);
    width: 100px;
    height: 3px;
    background-color: var(--color-primary);
    border-radius: 2px;
  }

  .swiper {
    width: 100%;
    max-width: 960px;
    margin: 0 auto;
    padding-top: 16px;
    padding-bottom: 16px;
    position: relative;
  }

  .swiper-wrapper {
    align-items: center;
  }

  .swiper-slide {
    width: 360px;
    height: 450px;
    background-position: center;
    background-size: cover;
    transition: all 0.4s ease;
    opacity: 0;
    transform: scale(0.7);
    pointer-events: none;
    visibility: hidden;
    margin-bottom: 16px;
  }

  .swiper-slide-visible {
    opacity: 0.7;
    visibility: visible;
    pointer-events: auto;
  }

  .swiper-slide-active {
    opacity: 1;
    transform: scale(1);
    z-index: 10;
  }

  .swiper-slide-prev,
  .swiper-slide-next {
    opacity: 0.8;
    transform: scale(0.85);
    z-index: 5;
  }

  .slide-content {
    width: 100%;
    height: 100%;
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
    background-color: #1c2c33;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .video-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 12px;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: transparent;
    border: none;
    cursor: pointer;
    opacity: 1;
    transition: opacity 0.3s ease;
    z-index: 2;
  }

  .play-button:hover svg circle {
    fill: rgba(0, 0, 0, 0.7);
  }

  .play-button.playing {
    opacity: 0;
    pointer-events: none;
  }

  video[data-error="true"] + .play-button {
    display: none;
  }

  video[data-error="true"]::after {
    content: "Video unavailable";
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.7);
    color: white;
  }

  .swiper-button-next,
  .swiper-button-prev {
    color: #ffffff;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    top: 45%;
  }

  .swiper-button-next {
    right: 0;
  }

  .swiper-button-prev {
    left: 0;
  }

  .swiper-pagination {
    position: relative; 
    bottom: -20px;
  }

  .swiper-pagination-bullet {
    width: 10px;
    height: 10px;
    margin: 0 5px;
    background: rgba(255, 255, 255, 0.5);
  }

  .swiper-pagination-bullet-active {
    background: #ffffff;
  }

  @media (max-width: 768px) {
    .section-title {
      text-align: center;
    }

    .section-title::after {
      left: 50%;
    }
    
    .swiper-button-next,
    .swiper-button-prev {
      width: 30px;
      height: 30px;
    }
    
    .swiper-button-next:after,
    .swiper-button-prev:after {
      font-size: 16px;
    }
  }
</style>

