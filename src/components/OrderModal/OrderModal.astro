---
import styles from './OrderModal.module.css';
import { getTranslation } from '../../i18n/useTranslation';
import type { ModalProps } from '../../types/modals';

// SSR: получаем язык и переводы
const { lang } = Astro.props as ModalProps;
const t = await getTranslation(lang);

// Список брендов
const carBrands = [
  'Audi','BMW','Mercedes-Benz','Volkswagen','Opel','Ford','Toyota',
  'Hyundai','Kia','Renault','Nissan','Volvo','Škoda','Seat','Mazda',
  'Porsche','Fiat','Honda','Citroën','Peugeot','Land Rover','Jeep',
  'Mini','Smart','Tesla','Другой'
];
---

<div id="orderModal" class={styles.modalOverlay}>
  <div class={styles.modalContainer}>
    <button id="closeOrderModal" class={styles.closeButton} aria-label="Закрыть"></button>
    <div class={styles.modalForm}>
      <h3 class={styles.modalTitle}>{t.order.title}</h3>
      <form id="orderForm" class={styles.formFields}>
        <div class={styles.formField}>
          <select id="carBrand" name="carBrand" required>
            <option value="" disabled hidden>{t.order.brand}</option>
            {carBrands.map(brand => <option value={brand}>{brand}</option>)}
          </select>
          <label for="carBrand">{t.order.brand}</label>
        </div>
        <div class={styles.formField}>
          <input id="carModel" name="carModel" type="text" placeholder={t.order.model} required />
          <label for="carModel">{t.order.model}</label>
        </div>
        <div class={styles.formField}>
          <input
            id="carYear"
            name="carYear"
            type="text"
            placeholder={t.order.year}
            pattern="[0-9]{4}"
            minlength="4"
            maxlength="4"
            required
          />
          <label for="carYear">{t.order.year}</label>
        </div>
        <div class={styles.formField}>
          <input id="customerName" name="customerName" type="text" placeholder={t.order.name} required />
          <label for="customerName">{t.order.name}</label>
        </div>
        <div class={styles.formField}>
          <input
            id="customerPhone"
            name="customerPhone"
            type="tel"
            placeholder={t.order.phone}
            pattern="[-+0-9() ]+"
            required
          />
          <label for="customerPhone">{t.order.phone}</label>
        </div>
        <button type="submit" class={styles.submitButton}>{t.order.submit}</button>
      </form>
    </div>
  </div>
</div>

<script is:inline>
window.addEventListener('DOMContentLoaded', () => {
  const orderModal   = document.getElementById('orderModal');
  const form         = document.getElementById('orderForm');
  const closeOrder   = document.getElementById('closeOrderModal');

  function openOrderModal() {
    orderModal?.classList.add('active');
    document.body.style.overflow = 'hidden';
  }
  function closeOrderModal() {
    orderModal?.classList.remove('active');
    document.body.style.overflow = '';
  }

  closeOrder?.addEventListener('click', closeOrderModal);
  orderModal?.addEventListener('click', e => { if (e.target === orderModal) closeOrderModal(); });

  form?.addEventListener('submit', async e => {
    e.preventDefault();
    const data = Object.fromEntries(new FormData(form));
    try {
      const res = await fetch('/api/order', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });
      if (res.ok) {
        closeOrderModal();
        form.reset();
        window.openSuccessModal?.();
      } else {
        alert('Ошибка отправки заказа');
      }
    } catch (err) {
      console.error(err);
      alert('Сетевая ошибка. Попробуйте позже.');
    }
  });

  // Экспорт для кнопки CTA в index.astro
  window.openOrderModal = openOrderModal;
});
</script>
