---
import styles from './SuccessModal.module.css';
import { getTranslation } from '../../i18n/useTranslation';
import type { ModalProps } from '../../types/modals';

// Получение параметров компонента
const { lang } = Astro.props as ModalProps;

// Получаем переводы
const t = await getTranslation(lang);
---

<div id="successModal" class={styles.modalOverlay}>
  <div class={styles.modalContainer}>
    <button id="closeSuccessModal" class={styles.closeButton} aria-label="Close"></button>
    
    <div class={styles.modalContent}>
      <div class={styles.successIcon}>
        <svg width="80" height="80" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="40" cy="40" r="40" fill="#30F955" fill-opacity="0.1"/>
          <circle cx="40" cy="40" r="32" fill="#30F955" fill-opacity="0.2"/>
          <circle cx="40" cy="40" r="24" fill="#30F955"/>
          <path d="M32 40L38 46L48 34" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
      
      <h3 class={styles.modalTitle}>{t.successModal.thankYou}</h3>
      
      <p class={styles.modalText}>
        {t.successModal.contactYou}
      </p>
      
      <div class={styles.buttonContainer}>
        <button id="successDoneButton" class={styles.doneButton}>
          <span>{t.successModal.buttonText}</span>
        </button>
      </div>
    </div>
  </div>
</div>

<style is:global>
  /* Глобальные стили для модального окна */
  #successModal.active {
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  #successModal.active .modalContainer {
    transform: translateY(0) !important;
  }
</style>

<script>
  // Находим все элементы для работы с модальным окном
  const successModal = document.getElementById('successModal');
  const closeSuccessButton = document.getElementById('closeSuccessModal');
  const doneButton = document.getElementById('successDoneButton');

  // Открытие модального окна успешной отправки
  function openSuccessModal() {
    if (successModal) {
      successModal.classList.add('active');
      document.body.style.overflow = 'hidden'; // Блокируем прокрутку основной страницы
    }
  }

  // Закрытие модального окна
  function closeSuccessModal() {
    if (successModal) {
      successModal.classList.remove('active');
      document.body.style.overflow = ''; // Возвращаем прокрутку основной страницы
    }
  }

  // Добавляем обработчики событий
  if (closeSuccessButton) {
    closeSuccessButton.addEventListener('click', closeSuccessModal);
  }
  
  if (doneButton) {
    doneButton.addEventListener('click', closeSuccessModal);
  }

  // Закрываем модальное окно при клике на оверлей (вне модального окна)
  if (successModal) {
    successModal.addEventListener('click', (e) => {
      if (e.target === successModal) {
        closeSuccessModal();
      }
    });
  }

  // Экспортируем функцию открытия модального окна для использования в других компонентах
  window.openSuccessModal = openSuccessModal;
</script>

<!-- Инициализация для работы модального окна с помощью глобального скрипта -->
<script is:inline>
  (function() {
    function initSuccessModal() {
      if (!window.openSuccessModal || typeof window.openSuccessModal !== 'function') {
        window.openSuccessModal = function() {
          const modal = document.getElementById('successModal');
          if (modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
          }
        };
      }
    }
    
    // Вызываем инициализацию
    initSuccessModal();
    
    // Дополнительно вызываем после полной загрузки DOM
    document.addEventListener('DOMContentLoaded', initSuccessModal);
  })();
</script> 